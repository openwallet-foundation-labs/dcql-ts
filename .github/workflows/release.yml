name: Release

permissions:
  contents: write
  packages: write
  pull-requests: write
  id-token: write   # required for npm trusted publishing

env:
  FORCE_COLOR: 3

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release-stable:
    name: Release Stable
    runs-on: ubuntu-latest
    outputs:
      published: ${{ steps.changesets.outputs.published }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/setup

      # anchor to the smallest npm version supporting trusted publishing
      - name: Update npm
        run: npm install -g npm@^11

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          title: "chore(release): new version"
          commit: "chore(release): new version"
          publish: pnpm release
          version: pnpm changeset-version
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-unstable:
    name: Release Unstable
    runs-on: ubuntu-latest
    needs: release-stable
    if: always() && github.event_name == 'push' && needs.release-stable.outputs.published == 'false'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/setup

      # anchor to the smallest npm version supporting trusted publishing
      - name: Update npm
        run: npm install -g npm@^11

      - name: Create unstable release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # this ensures there's always a patch release created
          cat << 'EOF' > .changeset/snapshot-template-changeset.md
          ---
          'dcql': patch
          ---

          snapshot release
          EOF

          pnpm changeset version --snapshot alpha
          pnpm build
          pnpm changeset publish --tag alpha

          CURRENT_PACKAGE_VERSION=$(node -p "require('./dcql/package.json').version")
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag v$CURRENT_PACKAGE_VERSION
          git push origin v$CURRENT_PACKAGE_VERSION --no-verify
